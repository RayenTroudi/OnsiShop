// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin") // Since there's only one admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  carts     Cart[]
}

model Category {
  id          String   @id @default(cuid())
  name        String
  handle      String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  products    Product[]
}

model Product {
  id              String   @id @default(cuid())
  handle          String   @unique
  title           String
  description     String?
  price           Float
  compareAtPrice  Float?
  availableForSale Boolean @default(true)
  categoryId      String?
  tags            String? // JSON string array
  images          String? // JSON string array
  variants        String? // JSON string array for variant data
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations  
  category        Category? @relation(fields: [categoryId], references: [id])
  cartItems       CartItem[]
}

model Cart {
  id        String   @id @default(cuid())
  userId    String?
  sessionId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user      User?      @relation(fields: [userId], references: [id], onDelete: SetNull)
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(cuid())
  cartId    String
  productId String
  quantity  Int      @default(1)
  variantId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  @@unique([cartId, productId, variantId])
}